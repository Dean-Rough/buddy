import { Resend } from 'resend';

// Initialize Resend client (handle missing API key gracefully in tests)
const resend = new Resend(process.env.RESEND_API_KEY || 'dummy-key-for-tests');

/**
 * Send safety alert email to parent
 */
export async function sendSafetyAlert(
  parentEmail: string,
  childName: string,
  alertLevel: number,
  triggerContent: string,
  aiResponse: string
): Promise<boolean> {
  try {
    // In test environment, simulate success without actually sending
    if (process.env.NODE_ENV === 'test' || !process.env.RESEND_API_KEY) {
      console.log(
        `[TEST MODE] Would send safety alert to ${parentEmail} for ${childName} (Level ${alertLevel})`
      );
      return true;
    }

    const severity = getSeverityLabel(alertLevel);
    const subject = `ðŸš¨ ${severity} Safety Alert - ${childName}`;

    const htmlContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #dc2626; border-bottom: 2px solid #dc2626; padding-bottom: 10px;">
          ${severity} Safety Alert
        </h2>
        
        <p><strong>Child:</strong> ${childName}</p>
        <p><strong>Alert Level:</strong> ${alertLevel}/3 (${severity})</p>
        <p><strong>Time:</strong> ${new Date().toLocaleString()}</p>
        
        <div style="background-color: #fef2f2; border-left: 4px solid #dc2626; padding: 15px; margin: 20px 0;">
          <h3 style="color: #dc2626; margin-top: 0;">Content that triggered alert:</h3>
          <p style="font-style: italic;">"${triggerContent}"</p>
        </div>
        
        <div style="background-color: #f0f9ff; border-left: 4px solid #0369a1; padding: 15px; margin: 20px 0;">
          <h3 style="color: #0369a1; margin-top: 0;">AI Response:</h3>
          <p>"${aiResponse}"</p>
        </div>
        
        ${getActionRecommendation(alertLevel)}
        
        <hr style="margin: 30px 0;">
        
        <p style="font-size: 12px; color: #666;">
          This alert was automatically generated by Onda's AI safety system. 
          All conversations are monitored to ensure your child's safety and well-being.
        </p>
        
        <p style="font-size: 12px; color: #666;">
          If you have concerns about this alert or need to speak with someone immediately, 
          please contact our support team.
        </p>
      </div>
    `;

    const { data, error } = await resend.emails.send({
      from: 'Onda Safety <safety@onda.ai>',
      to: [parentEmail],
      subject,
      html: htmlContent,
    });

    if (error) {
      console.error('Failed to send safety alert email:', error);
      return false;
    }

    console.log('Safety alert email sent successfully:', data?.id);
    return true;
  } catch (error) {
    console.error('Error sending safety alert:', error);
    return false;
  }
}

/**
 * Send weekly summary email to parent
 */
export async function sendWeeklySummary(
  parentEmail: string,
  childName: string,
  summaryContent: string
): Promise<boolean> {
  try {
    // In test environment, simulate success without actually sending
    if (process.env.NODE_ENV === 'test' || !process.env.RESEND_API_KEY) {
      console.log(
        `[TEST MODE] Would send weekly summary to ${parentEmail} for ${childName}`
      );
      return true;
    }

    const subject = `ðŸ“Š Weekly Summary for ${childName}`;

    const htmlContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #059669; border-bottom: 2px solid #059669; padding-bottom: 10px;">
          Weekly Summary for ${childName}
        </h2>
        
        <div style="white-space: pre-line; line-height: 1.6;">
          ${summaryContent.replace(/\n/g, '<br>')}
        </div>
        
        <hr style="margin: 30px 0;">
        
        <p style="font-size: 12px; color: #666;">
          This summary was automatically generated by Onda's AI system. 
          Weekly summaries help you stay connected with your child's digital interactions.
        </p>
      </div>
    `;

    const { data, error } = await resend.emails.send({
      from: 'Onda Reports <reports@onda.ai>',
      to: [parentEmail],
      subject,
      html: htmlContent,
    });

    if (error) {
      console.error('Failed to send weekly summary email:', error);
      return false;
    }

    console.log('Weekly summary email sent successfully:', data?.id);
    return true;
  } catch (error) {
    console.error('Error sending weekly summary:', error);
    return false;
  }
}

/**
 * Convert numeric severity level to human-readable label
 */
function getSeverityLabel(level: number): string {
  switch (level) {
    case 1:
      return 'Low Priority';
    case 2:
      return 'Moderate Concern';
    case 3:
      return 'High Priority';
    default:
      return 'Unknown';
  }
}

/**
 * Get action recommendation based on alert level
 */
function getActionRecommendation(level: number): string {
  switch (level) {
    case 1:
      return `
        <div style="background-color: #fffbeb; border-left: 4px solid #f59e0b; padding: 15px; margin: 20px 0;">
          <h3 style="color: #f59e0b; margin-top: 0;">Recommended Action:</h3>
          <p>This is a low-priority alert for monitoring purposes. No immediate action required, but you may want to be aware of this interaction pattern.</p>
        </div>
      `;
    case 2:
      return `
        <div style="background-color: #fef3c7; border-left: 4px solid #f59e0b; padding: 15px; margin: 20px 0;">
          <h3 style="color: #f59e0b; margin-top: 0;">Recommended Action:</h3>
          <p>This is a moderate concern that warrants your attention. Consider having a gentle conversation with ${name} about the topic that triggered this alert.</p>
        </div>
      `;
    case 3:
      return `
        <div style="background-color: #fee2e2; border-left: 4px solid #dc2626; padding: 15px; margin: 20px 0;">
          <h3 style="color: #dc2626; margin-top: 0;">Immediate Action Recommended:</h3>
          <p>This is a high-priority safety alert that requires your immediate attention. Please speak with your child as soon as possible about this interaction.</p>
          <p>If you believe your child may be in danger or distress, please contact appropriate authorities or support services.</p>
        </div>
      `;
    default:
      return '';
  }
}

/**
 * Test email functionality (development only)
 */
export async function sendTestEmail(email: string): Promise<boolean> {
  if (process.env.NODE_ENV === 'production') {
    console.error('Test emails not allowed in production');
    return false;
  }

  try {
    const { data, error } = await resend.emails.send({
      from: 'Onda Test <test@onda.ai>',
      to: [email],
      subject: 'Onda Email System Test',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #059669;">Email System Test</h2>
          <p>This is a test email to verify the Onda notification system is working correctly.</p>
          <p><strong>Timestamp:</strong> ${new Date().toISOString()}</p>
          <p>If you received this email, the notification system is configured properly.</p>
        </div>
      `,
    });

    if (error) {
      console.error('Test email failed:', error);
      return false;
    }

    console.log('Test email sent successfully:', data?.id);
    return true;
  } catch (error) {
    console.error('Error sending test email:', error);
    return false;
  }
}
